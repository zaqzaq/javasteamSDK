/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class steam_ISteamController */

#ifndef _Included_steam_ISteamController
#define _Included_steam_ISteamController
#ifdef __cplusplus
extern "C" {
#endif
#undef steam_ISteamController_STEAM_CONTROLLER_MAX_COUNT
#define steam_ISteamController_STEAM_CONTROLLER_MAX_COUNT 16L
#undef steam_ISteamController_STEAM_CONTROLLER_MAX_ANALOG_ACTIONS
#define steam_ISteamController_STEAM_CONTROLLER_MAX_ANALOG_ACTIONS 16L
#undef steam_ISteamController_STEAM_CONTROLLER_MAX_DIGITAL_ACTIONS
#define steam_ISteamController_STEAM_CONTROLLER_MAX_DIGITAL_ACTIONS 32L
#undef steam_ISteamController_STEAM_CONTROLLER_MAX_ORIGINS
#define steam_ISteamController_STEAM_CONTROLLER_MAX_ORIGINS 8L
#undef steam_ISteamController_STEAM_CONTROLLER_MIN_ANALOG_ACTION_DATA
#define steam_ISteamController_STEAM_CONTROLLER_MIN_ANALOG_ACTION_DATA -1.0f
#undef steam_ISteamController_STEAM_CONTROLLER_MAX_ANALOG_ACTION_DATA
#define steam_ISteamController_STEAM_CONTROLLER_MAX_ANALOG_ACTION_DATA 1.0f
/*
 * Class:     steam_ISteamController
 * Method:    nInit
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_steam_ISteamController_nInit
  (JNIEnv *, jclass);

/*
 * Class:     steam_ISteamController
 * Method:    nShutdown
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_steam_ISteamController_nShutdown
  (JNIEnv *, jclass);

/*
 * Class:     steam_ISteamController
 * Method:    nRunFrame
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_steam_ISteamController_nRunFrame
  (JNIEnv *, jclass);

/*
 * Class:     steam_ISteamController
 * Method:    nGetConnectedControllers
 * Signature: ()[Lsteam/ControllerHandle_t;
 */
JNIEXPORT jobjectArray JNICALL Java_steam_ISteamController_nGetConnectedControllers
  (JNIEnv *, jclass);

/*
 * Class:     steam_ISteamController
 * Method:    nShowBindingPanel
 * Signature: (Lsteam/ControllerHandle_t;)Z
 */
JNIEXPORT jboolean JNICALL Java_steam_ISteamController_nShowBindingPanel
  (JNIEnv *, jclass, jobject);

/*
 * Class:     steam_ISteamController
 * Method:    nGetActionSetHandle
 * Signature: (Ljava/lang/String;)Lsteam/ControllerActionSetHandle_t;
 */
JNIEXPORT jobject JNICALL Java_steam_ISteamController_nGetActionSetHandle
  (JNIEnv *, jclass, jstring);

/*
 * Class:     steam_ISteamController
 * Method:    nActivateActionSet
 * Signature: (Lsteam/ControllerHandle_t;Lsteam/ControllerActionSetHandle_t;)V
 */
JNIEXPORT void JNICALL Java_steam_ISteamController_nActivateActionSet
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     steam_ISteamController
 * Method:    nGetCurrentActionSet
 * Signature: (Lsteam/ControllerHandle_t;)Lsteam/ControllerActionSetHandle_t;
 */
JNIEXPORT jobject JNICALL Java_steam_ISteamController_nGetCurrentActionSet
  (JNIEnv *, jclass, jobject);

/*
 * Class:     steam_ISteamController
 * Method:    nGetDigitalActionHandle
 * Signature: (Ljava/lang/String;)Lsteam/ControllerDigitalActionHandle_t;
 */
JNIEXPORT jobject JNICALL Java_steam_ISteamController_nGetDigitalActionHandle
  (JNIEnv *, jclass, jstring);

/*
 * Class:     steam_ISteamController
 * Method:    nGetDigitalActionData
 * Signature: (Lsteam/ControllerHandle_t;Lsteam/ControllerDigitalActionHandle_t;)Lsteam/ControllerDigitalActionData_t;
 */
JNIEXPORT jobject JNICALL Java_steam_ISteamController_nGetDigitalActionData
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     steam_ISteamController
 * Method:    nGetDigitalActionOrigins
 * Signature: (Lsteam/ControllerHandle_t;Lsteam/ControllerActionSetHandle_t;Lsteam/ControllerDigitalActionHandle_t;)[Lsteam/EControllerActionOrigin;
 */
JNIEXPORT jobjectArray JNICALL Java_steam_ISteamController_nGetDigitalActionOrigins
  (JNIEnv *, jclass, jobject, jobject, jobject);

/*
 * Class:     steam_ISteamController
 * Method:    nGetAnalogActionHandle
 * Signature: (Ljava/lang/String;)Lsteam/ControllerAnalogActionHandle_t;
 */
JNIEXPORT jobject JNICALL Java_steam_ISteamController_nGetAnalogActionHandle
  (JNIEnv *, jclass, jstring);

/*
 * Class:     steam_ISteamController
 * Method:    nGetAnalogActionData
 * Signature: (Lsteam/ControllerHandle_t;Lsteam/ControllerAnalogActionHandle_t;)Lsteam/ControllerAnalogActionData_t;
 */
JNIEXPORT jobject JNICALL Java_steam_ISteamController_nGetAnalogActionData
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     steam_ISteamController
 * Method:    nGetAnalogActionOrigins
 * Signature: (Lsteam/ControllerHandle_t;Lsteam/ControllerActionSetHandle_t;Lsteam/ControllerAnalogActionHandle_t;)[Lsteam/EControllerActionOrigin;
 */
JNIEXPORT jobjectArray JNICALL Java_steam_ISteamController_nGetAnalogActionOrigins
  (JNIEnv *, jclass, jobject, jobject, jobject);

/*
 * Class:     steam_ISteamController
 * Method:    nStopAnalogActionMomentum
 * Signature: (Lsteam/ControllerHandle_t;Lsteam/ControllerAnalogActionHandle_t;)V
 */
JNIEXPORT void JNICALL Java_steam_ISteamController_nStopAnalogActionMomentum
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     steam_ISteamController
 * Method:    nTriggerHapticPulse
 * Signature: (Lsteam/ControllerHandle_t;Lsteam/ESteamControllerPad;I)V
 */
JNIEXPORT void JNICALL Java_steam_ISteamController_nTriggerHapticPulse
  (JNIEnv *, jclass, jobject, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
